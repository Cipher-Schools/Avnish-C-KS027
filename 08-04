/*Once upon a time Alice and Bob were playing a game, since Alice is a 
magician he came up with a puzzle, he thought of two strong magical number
and gave to Bob and asked if  problem is solved , will be getting lot of 
candies, the problem is Bob need to tell Alice minimum no of moves in which
bob can convert the Mathematical "OR" of those two numbers in new Target.
In one valid move you can toggle a binary bit of the concerned Number.

for example a = 4, b = 5, C = 7
Minimum number of moves required = 1



*/
#include<iostream>
using namespace std;
int main(){
int a, b, c;
int moves = 0;
scanf("%d %d %d", &a, &b, &c);
for(int i = 0; i <= 31; i++){
    bool onInA = (1 << i) & a;
    bool onInB = (1 << i) & b;
    bool onInC = (1 << i) & c;
    if(onInC == 1){
        if(onInA == 0 && onInB == 0){
            moves++;
        }
    }
    else{
        if((onInA == 1 && onInB == 0) ||
            (onInA == 0 && onInB == 1)){
                moves++;
            }
        else{
            if(onInA == 1 && onInB == 1){
                moves += 2;
            }
        }
    }
}
printf("%d", moves);
return 0;
}

















#include <stdio.h>

int main(){
    int n; scanf("%d", &n);
    int arr[n];
    for(int i = 0; i < n; i++){
        scanf("%d", &arr[i]);
    }
    int xorPrefix[n];
    for(int i = 1; i < n; i++){
        xorPrefix[i] = (i == 0 ? arr[i] : xorPrefix[i - 1] ^ arr[i]);
    }
    int m;
    scanf("%d", &m);
    int query[m][2];
    for(int i = 0; i < m; i++){
        for(int j = 0; j < 2; j++){
            scanf("%d", &query[i][j]);
        }
    }
    int ans[m];
    for(int i = 0; i < m; i++){ // M
        int left = query[i][0];
        int right = query[i][1];
        int leftAns = (left == 0 ? xorPrefix[left] : xorPrefix[left - 1]);
        int rightAns = (xorPrefix[right]);
        ans[i] = leftAns ^ rightAns;
    }
    for(int i = 0; i < m; i++){
        printf("%d , ", ans[i]);
    }
    return 0;
}


