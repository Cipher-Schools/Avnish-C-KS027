Node* head;
void Print(){
    if(head == NULL){
        printf("NULL");
        return ;
    }
    Node* copy = head;
    while(copy->next != head){
        printf("%d->", copy->data);
        copy = copy->next;
    }
    printf("%d->", copy->data);
    printf("%d", head->data);
}
int getLength(){
    if(head == NULL){
        return 0;
    }
    Node* copy = head;
    int len = 0;
    while(copy->next != head){
        len++;
        copy = copy->next;
    }
    len++;
    return len;
}
Node* getLast(){
    if(head == NULL){
        return NULL;
    }
    Node* copy = head;
    while(copy->next != head){
        printf("%d->", copy->data);
        copy = copy->next;
    }
    return copy;
}
Node* Search(int target){
    if(head == NULL){
        return NULL;
    }
    Node* copy = head;
    while(copy->next != head){
        if(copy->data == target){
            return copy;
        }
        copy = copy->next;
    }
    return (copy->data == target ? copy : NULL);
}
int Insert(int data, int position){
    int len = getLength();
    if(position < 0 or position > len){
        return 0;
    }
    Node* newNode = (Node*)(malloc(sizeof(Node)));
    newNode->data = data;
    newNode->next = NULL;
    if(head == NULL){
        head = newNode;
        newNode->next = newNode;
        return 1;
    }
    else if(position == 0){
        newNode->next = head;
        head = newNode;
        Node* last = getLast();
        last->next = head;
        return 1;
    }
    Node* copy = head;
    while(position - 1 > 0){
        copy = copy->next;
        position--;
    }
    newNode->next = copy->next;
    copy->next = newNode;
    return 1;
}
